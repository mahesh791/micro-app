pipeline {
  agent { dockerfile true }
  stages {
    stage('Compile') {
      steps {
        sh '''
          git switch -c $MICROAPP_BRANCH origin/$MICROAPP_BRANCH
          tar --exclude='.git' -zcvf output.tar.gz .
        '''
      }
    }
    stage('Push Version') {
    environment {
            GIT_AUTH = credentials('github_cred')
        }
      steps {
        sh '''
          
          git branch -v -a
          git --version
          git config user.email "deoremahesh791@gmail.com"
          git config user.name "Mahesh"
          git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
          #sleep 25
          git pull origin $MICROAPP_BRANCH
          echo "\n"$(date) $BUILD_NUMBER >> versions
          git add versions && git commit -m \"Added ${BUILD_NUMBER}\"
          rel_ver=`cat release_version`
          git tag -a v$rel_ver.${BUILD_NUMBER}_$MICROAPP_BRANCH -m \"Adding tag for v$rel_ver.${BUILD_NUMBER}_${MICROAPP_BRANCH}\"
          git push origin HEAD:$MICROAPP_BRANCH
          git push origin v$rel_ver.${BUILD_NUMBER}_$MICROAPP_BRANCH
          #test
        '''
      }
    }
  }
  post {
        always {
            archiveArtifacts artifacts: 'output.tar.gz', onlyIfSuccessful: true
        }
    }
}
